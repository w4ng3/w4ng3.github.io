export const pagesRoutes = [
  ["v-8daa1a0e","/",{"title":"主页","icon":"home","type":"home","readingTime":{"minutes":0.53,"words":160},"excerpt":""},["/index.html","/README.md"]],
  ["v-0e503981","/slide.html",{"title":"幻灯片页","icon":"slides","type":"slide","readingTime":{"minutes":4.51,"words":1353},"excerpt":"@slidestart 幻灯片演示 一个简单的幻灯片演示与各种小贴士。 \" 作者 Mr.Hope. 请滚动鼠标滚轮进入下一页\" --- 标注幻灯片 👇 -- 标注幻灯片 使用 --- 标注水平幻灯片 在水平幻灯片中使用 -- 分割垂直幻灯片 使用 `` 在幻灯片上添加属性 使用 `` 在前一个 HTML 元素上添加属性 --- Markdown 你可以在幻","author":"Mr.Hope"},["/slide","/slide.md"]],
  ["v-003c11ac","/knowledge/",{"title":"寻找无双","icon":"creative","type":"page","readingTime":{"minutes":0.05,"words":14},"excerpt":"目录","category":[]},["/knowledge/index.html","/knowledge/README.md"]],
  ["v-fffb8e28","/guide/",{"title":"主要功能与配置演示","icon":"creative","type":"article","readingTime":{"minutes":0.08,"words":25},"excerpt":"目录 Markdown 展示;","category":["使用指南"]},["/guide/index.html","/guide/README.md"]],
  ["v-0978b044","/guide/markdown.html",{"title":"Markdown 展示","icon":"markdown","type":"page","readingTime":{"minutes":4.04,"words":1212},"excerpt":"<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>\n<p>你应该创建和编写 Markdown 文件，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>\n","category":["使用指南"],"tag":["Markdown"]},["/guide/markdown","/guide/markdown.md"]],
  ["v-4eaf9f84","/guide/page.html",{"title":"页面配置","icon":"page","type":"page","readingTime":{"minutes":1.59,"words":478},"excerpt":"<p><code v-pre>more</code> 注释之前的内容被视为文章摘要。</p>\n","author":"Ms.Hope","date":"2020-01-01T00:00:00.000Z","localizedDate":"2020年1月1日","category":["使用指南"],"tag":["页面配置","使用指南"],"sticky":true,"star":true},["/guide/page","/guide/page.md"]],
  ["v-76f78449","/black/",{"title":"黑铁时代","icon":"creative","type":"page","readingTime":{"minutes":0.11,"words":33},"excerpt":"黑铁公寓 黑铁时代的象征是那支鹅毛笔","category":["黑铁时代"]},["/black/index.html","/black/README.md"]],
  ["v-5c61a91c","/literary/",{"title":"未来文笏","icon":"creative","type":"page","readingTime":{"minutes":0.05,"words":16},"excerpt":"目录","category":["轻盈"]},["/literary/index.html","/literary/README.md"]],
  ["v-78726316","/literary/light.html",{"title":"轻逸","icon":"page","type":"article","readingTime":{"minutes":6.52,"words":1955},"excerpt":"轻与重是文学的母体之一，卡尔维诺在《新千年文学备忘录》里点明了米兰·昆德拉的小说《不能承受的生命之轻》，其实是痛苦地承认生活中不可避免的沉重，他的这部小说向我们揭示，我们在生活中选择与珍惜的一切轻松东西，将来不可避免地会变成沉重的负担。 卡尔维诺的自我定义 我的工作常常是为了减轻分量，有时尽力减轻人物的分量，有时尽力减轻天体的分量，有时尽力减轻城市的分量，首","author":"Ms.王東","date":"2022-07-12T00:00:00.000Z","localizedDate":"2022年7月12日","category":["未来文笏"],"tag":["轻盈"]},["/literary/light","/literary/light.md"]],
  ["v-190648d0","/literary/swift.html",{"title":"迅速","icon":"page","type":"article","readingTime":{"minutes":0.97,"words":290},"excerpt":"<p>简要的记述更有启发性：它把一切都留给人们去想象，而故事情节的迅速转换使人觉得故事的结局是不可避免的。</p>\n","author":"Ms.王東","date":"2022-07-12T00:00:00.000Z","localizedDate":"2022年7月12日","category":["未来文笏"],"tag":["迅速"],"sticky":false},["/literary/swift","/literary/swift.md"]],
  ["v-5d00dcdd","/code/js/Array.html",{"title":"数组","icon":"array","type":"article","readingTime":{"minutes":8.24,"words":2472},"excerpt":"<p>本文对 JavaScript 中数组的创建、访问、操作进行了简要的介绍。</p>\n","date":"2019-09-16T00:00:00.000Z","localizedDate":"2019年9月16日","category":["JavaScript"],"tag":["快速上手"]},["/code/js/Array","/code/js/Array.md"]],
  ["v-f09f94c4","/code/js/Map&Set.html",{"title":"Map和Set","icon":"map","type":"article","readingTime":{"minutes":2.43,"words":728},"excerpt":"\" ES6 新引入的 Map 与 Set 是对数组和对象欠缺功能的一种补充。\" Map 的引入 JavaScript 的默认对象表示方式 {} 可以视为其他语言中的 Map 或 Dictionary 的数据结构，即一组键值对。 但是 JavaScript 的对象有个小问题，就是键必须是字符串。但实际上 Number 或者其他数据类型作为键也是非常合理的。 为","author":"Mr.Hope","date":"2019-09-16T00:00:00.000Z","localizedDate":"2019年9月16日","category":["JavaScript"],"tag":["快速上手"]},["/code/js/Map&Set","/code/js/Map&Set.md"]],
  ["v-ba485a46","/code/js/",{"title":"JavaScript","icon":"javascript","type":"article","readingTime":{"minutes":1.25,"words":374},"excerpt":"JavaScript 是一种轻量级的脚本语言。所谓“脚本语言” (script language)，指的是它不具备开发操作系统的能力，而是只用来编写控制其他大型应用程序(比如浏览器)的“脚本”。 JavaScript 也是一种嵌入式 (embedded) 语言。它本身提供的核心语法不算很多，只能用来做一些数学和逻辑运算。JavaScript 本身不提供任何与","category":["JavaScript"]},["/code/js/index.html","/code/js/README.md"]],
  ["v-0a16c76a","/code/js/String.html",{"title":"字符串","icon":"string","type":"article","readingTime":{"minutes":2.75,"words":824},"excerpt":"<p>JavaScript 的字符串就是用 <code v-pre>''</code> 或 <code v-pre>&quot;&quot;</code> 括起来的字符表示。</p>\n","author":"Mr.Hope","date":"2019-09-16T00:00:00.000Z","localizedDate":"2019年9月16日","category":["JavaScript"],"tag":["快速上手"]},["/code/js/String","/code/js/String.md"]],
  ["v-c8265628","/code/flutter/Flutter_resource.html",{"title":"Flutter资源","icon":"flutter","type":"article","readingTime":{"minutes":24.36,"words":7309},"excerpt":"Flutter资源 介绍 Google IO 2018 - 构建美观灵活的用户界面; Presentation - 为什么我会选择Flutter; Flutter Web - Flutter Web的来龙去脉; 网站/博客 Welcome to Flutter - 英文和法文博客致力; Flutter by Example - 基于ReduxFirebase","author":{"name":"mqxu","url":"https://github.com/mqxu"},"date":"2022-08-29T00:00:00.000Z","localizedDate":"2022年8月29日","category":["flutter"]},["/code/flutter/Flutter_resource","/code/flutter/Flutter_resource.md"]],
  ["v-49701594","/code/flutter/Flutter%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF.html",{"title":"Flutter 区别于其他方案的关键技术","icon":"dart","type":"article","readingTime":{"minutes":13.11,"words":3933},"excerpt":"Flutter 区别于其他方案的关键技术 1. Flutter 出现的历史背景 为不同的操作系统开发拥有相同功能的应用程序，开发人员只有两个选择： 1. 使用原生开发语言（即 Java 和 Objective-C），针对不同平台分别进行开发。 2. 使用跨平台解决方案，对不同平台进行统一开发。 原生开发方式的体验最好，但研发效率和研发成本相对较高；而跨平台开","author":{"name":"mqxu","url":"https://github.com/mqxu"},"date":"2022-08-29T00:00:00.000Z","localizedDate":"2022年8月29日","category":["flutter"]},["/code/flutter/Flutter关键技术.html","/code/flutter/Flutter%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF","/code/flutter/Flutter关键技术.md","/code/flutter/Flutter%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF.md"]],
  ["v-2d12431c","/code/flutter/",{"title":"Flutter","icon":"dart","type":"article","readingTime":{"minutes":5.35,"words":1606},"excerpt":"1.1、跨平台开发对比 Web 容器 ：Cordova Ionic; 泛 Web 容器: React Native; 自绘引擎：Flutter; \" 自己去了解一下：AOT和 JIT\" 1.2、Flutter介绍 \" Flutter 是 Google 推出并开源的移动应用开发UI框架，主打跨平台、高保真、高性能。开发者可以通过 Dart 语言开发 App，一","category":["flutter"]},["/code/flutter/index.html","/code/flutter/README.md"]],
  ["v-13deb5c4","/code/flutter/dart.html",{"title":"Dart","icon":"dart","type":"article","readingTime":{"minutes":0.38,"words":115},"excerpt":"Dart介绍 Dart是由⾕歌开发的计算机编程语⾔,它可以被⽤于web、服务器、移动应⽤ 和物联⽹等领域的开发。 Dart诞⽣于2011年，号称要取代JavaScript。但是过去的⼏年中⼀直不温不⽕。直到Flutter的出现现在被⼈们重新重视。 Dart 学习 PDF文档; 官网指南;","date":"2022-08-13T00:00:00.000Z","localizedDate":"2022年8月13日","category":["flutter"],"tag":["快速上手"]},["/code/flutter/dart","/code/flutter/dart.md"]],
  ["v-01227f16","/code/flutter/go_router.html",{"title":"go_router声明式路由","icon":"dart","type":"article","readingTime":{"minutes":3.06,"words":919},"excerpt":"go_router声明式路由 基本使用 声明路由 使用 go; push; pushName; goName; 命名路由 Link 页面传参 go_router：params pathtoregexp 文档 params 动态链接 \" 动态链接的想法是用户可以为应用添加这样的对象，每个对象获得一个自身的链接，例如，一个新的 family 获得一个新的链接。这","date":"2022-09-11T00:00:00.000Z","localizedDate":"2022年9月11日","category":["flutter"]},["/code/flutter/go_router","/code/flutter/go_router.md"]],
  ["v-3d6c9a3a","/code/flutter/life_cycle.html",{"title":"Flutter的生命周期","icon":"dart","type":"article","readingTime":{"minutes":2.28,"words":683},"excerpt":"state的生命周期 State 的生命周期可以分为 3 个阶段 创建（插入视图树）：State 初始化时会依次执行 ：构造方法 -> initState -> didChangeDependencies -> build，随后完成页面渲染。; 更新（在视图树中存在）： Widget 的状态更新，主要由 3 个方法触发：setState、didchangeD","author":{"name":"mqxu","url":"https://github.com/mqxu"},"date":"2022-09-11T00:00:00.000Z","localizedDate":"2022年9月11日","category":["flutter"]},["/code/flutter/life_cycle","/code/flutter/life_cycle.md"]],
  ["v-53e4b768","/code/flutter/route.html",{"title":"普通路由、命名路由、路由传值","icon":"dart","type":"article","readingTime":{"minutes":2.54,"words":761},"excerpt":"普通路由、命名路由、路由传值 一、Flutter 中的路由 Flutter 中的路由通俗地讲就是页面跳转。在 Flutter 中通过 Navigator 组件管理路由导航。并提供了管理堆栈的方法。如:Navigator.push 和 Navigator.pop。 Flutter 中给我们提供了两种配置路由跳转的方式:1、基本路由 2、命名路由。 二、基本路由","author":{"name":"mqxu","url":"https://github.com/mqxu"},"date":"2022-09-11T00:00:00.000Z","localizedDate":"2022年9月11日","category":["flutter"]},["/code/flutter/route","/code/flutter/route.md"]],
  ["v-de032b4c","/code/nodejs/HTTP_server.html",{"title":"一个基础的HTTP服务器","icon":"http","type":"article","readingTime":{"minutes":1.06,"words":318},"excerpt":"@tab index.js @tab server.js @tab requestHandles.js @tab router.js 参考 Node入门; module.exports 、exports、export、export default的区别; 如何使用 Promise;","date":"2022-08-23T00:00:00.000Z","localizedDate":"2022年8月23日","category":["NodeJS"]},["/code/nodejs/HTTP_server","/code/nodejs/HTTP_server.md"]],
  ["v-28ad0a1b","/code/nodejs/",{"title":"Node.js","icon":"nodeJS","type":"article","readingTime":{"minutes":0.67,"words":202},"excerpt":"Node.js 是一款全球使用广泛的框架，可以用在前端与后端上，拥有大量的模块。Node.js 主要以其丰富并及其容易导入的 Node.js package，以及其方便管理 npm (Node.js Package Manager)闻名。 About Node.js介绍; Node.js与npm安装; 搭建 Node 开发环境; CommonJS模块; 你不","category":["NodeJS"]},["/code/nodejs/index.html","/code/nodejs/README.md"]],
  ["v-04307547","/code/nodejs/connect_mysql.html",{"title":"nodeJS连接mysql数据库","icon":"mysql","type":"article","readingTime":{"minutes":3.01,"words":903},"excerpt":"安装 mysql2相比mysqls的优势 mysql2的性能更高，支持PreparedStatement，多次查询性能更高，书写SQL更简单；自带Promise包装器，可以直接使用async/await语法；和大部分的mysqls库兼容。且被sequlize支持。 连接数据库 在Node.js中如何使用mysql2 connection.query方法可以用","date":"2022-08-23T00:00:00.000Z","localizedDate":"2022年8月23日","category":["mysql","NodeJS"]},["/code/nodejs/connect_mysql","/code/nodejs/connect_mysql.md"]],
  ["v-ae853988","/code/nodejs/use_express.html",{"title":"Express 框架","icon":"nodeJS","type":"article","readingTime":{"minutes":0.6,"words":181},"excerpt":"Express 是一个最小且灵活的 Node.js Web 应用程序框架，它为 Web 和移动应用程序提供了一组强大的功能。 使用 Express 可以快速地搭建一个完整功能的网站。 Express 框架核心特性： 可以设置中间件来响应 HTTP 请求。; 定义了路由表用于执行不同的 HTTP 请求动作。; 可以通过向模板传递参数来动态渲染 HTML 页面。","date":"2022-08-25T00:00:00.000Z","localizedDate":"2022年8月25日","category":["NodeJS"]},["/code/nodejs/use_express","/code/nodejs/use_express.md"]],
  ["v-ba480f32","/code/ts/",{"title":"TypeScript","icon":"typescript","type":"article","readingTime":{"minutes":0.55,"words":164},"excerpt":"\" TypeScript 是一种由微软开发的自由和开源的编程语言，它是 JavaScript 的一个超集，扩展了 JavaScript 的语法。\" 语法特性 类 Classes; 接口 Interfaces; 模块 Modules; 类型注解 Type annotations; 编译时类型检查 Compile time type checking; Arro","category":["typescript"]},["/code/ts/index.html","/code/ts/README.md"]],
  ["v-39b18162","/code/ts/vue+ts%E5%AE%9E%E7%8E%B0TodoList.html",{"title":"Vue + Ts 实现TodoList","icon":"typescript","type":"article","readingTime":{"minutes":2.56,"words":768},"excerpt":"先为我们的应用安装UI框架，这样视觉上会好看些 安装好之后，在 main.ts 中注册组件并导入样式文件： 创建一个 types 文件夹，用来存放项目中类型声明文件，比如我们这个 todo 应用，可以创建一个 todo.ts: 然后在 components 文件夹下新建 TodoList.vue，这个组件用来实现处理每个待办事项的操作逻辑;; 实现添加待办事","date":"2022-08-06T00:00:00.000Z","localizedDate":"2022年8月6日","category":["TypeScript"],"tag":["demo"]},["/code/ts/vue+ts实现TodoList.html","/code/ts/vue+ts%E5%AE%9E%E7%8E%B0TodoList","/code/ts/vue+ts实现TodoList.md","/code/ts/vue+ts%E5%AE%9E%E7%8E%B0TodoList.md"]],
  ["v-5c3dabe4","/code/ts/%E5%9C%A8Vue%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3.html",{"title":"在Vue中使用注解","icon":"vue","type":"article","readingTime":{"minutes":0.18,"words":55},"excerpt":"参考 github: vue-property-decorator; TypeScript在Vue中的使用; Vue 类组件;","date":"2022-08-07T00:00:00.000Z","localizedDate":"2022年8月7日","category":["Vue","TypeScript"],"tag":["注解"]},["/code/ts/在Vue中使用注解.html","/code/ts/%E5%9C%A8Vue%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3","/code/ts/在Vue中使用注解.md","/code/ts/%E5%9C%A8Vue%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3.md"]],
  ["v-70bcc2a2","/code/utils/Tampermonkey.html",{"title":"油猴脚本简单使用","icon":"icon-tool","type":"article","readingTime":{"minutes":2.23,"words":669},"excerpt":"油猴脚本是什么？ 油猴脚本（Tampermonkey）是一个流行的浏览器扩展，可以运行用户编写的扩展脚本，来实现各式各样的功能，比如去广告、修改样式、下载视频等。 安装 Chrome应用商店：Tampermonkey 安装完成后，点击浏览器右上角出现的油猴插件，添加新脚本 模板中会预设部分元数据，用于定义脚本的名称、版本号、更新方式、运行页面、权限等功能 常","date":"2022-08-10T00:00:00.000Z","localizedDate":"2022年8月10日","category":["utils"]},["/code/utils/Tampermonkey","/code/utils/Tampermonkey.md"]],
  ["v-6ef3879f","/code/utils/aliyunOSS-upload.html",{"title":"Web端PostObject直传阿里云OSS","icon":"vue","type":"article","readingTime":{"minutes":2.38,"words":715},"excerpt":"Web端常见的上传方法是用户在浏览器或App端上传文件到应用服务器，应用服务器再把文件上传到OSS。这种方式需通过应用服务器中转，传输效率明显低于数据直传至OSS的方式。 数据直传至OSS是利用OSS的PostObject接口，使用表单上传方式上传文件至OSS。 Demo: Vue项目上传图片到OSS 阿里云文档：JavaScript客户端签名直传 OSS ","date":"2022-08-08T00:00:00.000Z","localizedDate":"2022年8月8日","category":["utils"],"tag":["OSS"]},["/code/utils/aliyunOSS-upload","/code/utils/aliyunOSS-upload.md"]],
  ["v-b4cdfc12","/code/vue/CompositionAPI.html",{"title":"Componsition API","icon":"vue","type":"article","readingTime":{"minutes":3.54,"words":1061},"excerpt":"组合式API更加关注代码的逻辑关注点 参考 Vue3.2单文件组件setup的语法糖总结; 不要再用vue2的思维写vue3了; composition-api-demo; 尤雨溪的看法 「摘至」 compostion API在提案的时候，就有很多人持有不同意见，有反对有支持，实际上都没有错，只是大家碰到的场景不同而导致不同观点。通过阅读compostion","date":"2022-08-07T00:00:00.000Z","localizedDate":"2022年8月7日","category":["Vue"],"tag":["api"]},["/code/vue/CompositionAPI","/code/vue/CompositionAPI.md"]],
  ["v-3ebf3602","/code/vue/Vue-Hooks.html",{"title":"了解Vue中的Hooks","icon":"vue","type":"article","readingTime":{"minutes":2.41,"words":723},"excerpt":"import useMousePosition from '@Hooks/useMousePosition' const { x, y } = useMousePosition() hook(钩子🪝) hook本质上是一个函数，是一种编程机制 作用是将setup函数中使用的Composition API(ref、reactive、computed、watc","date":"2022-08-07T00:00:00.000Z","localizedDate":"2022年8月7日","category":["Vue"],"tag":["hook"]},["/code/vue/Vue-Hooks","/code/vue/Vue-Hooks.md"]],
  ["v-6ef429c6","/code/vue/%E5%86%85%E7%BD%AE%E7%BB%84%E4%BB%B6KeepAlive.html",{"title":"内置组件 KeepAlive","icon":"vue","type":"article","readingTime":{"minutes":3.76,"words":1129},"excerpt":"HTTP中的KeepAlive可以避免连接频繁地销毁/创建，与HTTP中的keepAlive类似，Vue.js内建的KeepAlive组件可以避免一个组件被频繁创建地销毁/重建。 假设我们的页面中有一组组件，如下面的代码所示： 可以看到，根据变量 currentTab 值的不同，会渲染不同的组件。当用户频繁地切换 Tab时，会导致不停地卸载并重建对应的 Ta","author":"王東","date":"2022-07-25T00:00:00.000Z","localizedDate":"2022年7月25日","category":["Vue"],"tag":["组件优化"]},["/code/vue/内置组件KeepAlive.html","/code/vue/%E5%86%85%E7%BD%AE%E7%BB%84%E4%BB%B6KeepAlive","/code/vue/内置组件KeepAlive.md","/code/vue/%E5%86%85%E7%BD%AE%E7%BB%84%E4%BB%B6KeepAlive.md"]],
  ["v-0f7d1bf2","/code/vue/%E5%9C%A8Vue%E4%B8%AD%E4%BD%BF%E7%94%A8JSX%E8%AF%AD%E6%B3%95.html",{"title":"在Vue中使用JSX语法","icon":"vue","type":"article","readingTime":{"minutes":3.15,"words":946},"excerpt":"渲染函数在代码易读性上比模版差很多，代码写起来很痛苦， 这就是为什么会有一个 Babel 插件，用于在 Vue 中使用 JSX 语法，它可以让我们回到更接近于模板的语法上。 \" naive-ui组件库的源码就是使用tsx写的\" 对比 template 和 jsx/tsx 的优缺点 来源：为什么 Vue3 的组件库都在使用 jsx/tsx？ - 阿崔cxr的回","author":"王東","date":"2022-07-30T00:00:00.000Z","localizedDate":"2022年7月30日","category":["Vue"],"tag":["吃饱撑的"]},["/code/vue/在Vue中使用JSX语法.html","/code/vue/%E5%9C%A8Vue%E4%B8%AD%E4%BD%BF%E7%94%A8JSX%E8%AF%AD%E6%B3%95","/code/vue/在Vue中使用JSX语法.md","/code/vue/%E5%9C%A8Vue%E4%B8%AD%E4%BD%BF%E7%94%A8JSX%E8%AF%AD%E6%B3%95.md"]],
  ["v-2c0dae4e","/code/vue/%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6.html",{"title":"异步组件","icon":"vue","type":"article","readingTime":{"minutes":4.89,"words":1468},"excerpt":"异步组件 需求 当我们的项目达到一定的规模时，对于某些组件来说，我们并不希望一开始全部加载，而是需要的时候进行加载,或是不必第一时间进行加载；这样的做得目的是为了释放页面的负载，提高页面加载速度，可以很好的提高用户体验。 为了实现这个功能，Vue3中为我们提供了一个方法，即defineAsyncComponent，这个方法可以传递两种类型的参数，分别是函数类","author":"王東","date":"2022-07-25T00:00:00.000Z","localizedDate":"2022年7月25日","category":["Vue"],"tag":["组件优化"]},["/code/vue/异步组件.html","/code/vue/%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6","/code/vue/异步组件.md","/code/vue/%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6.md"]],
  ["v-ce9f40b4","/code/vue/%E6%B8%B2%E6%9F%93%E5%87%BD%E6%95%B0%E4%B8%8E%E8%99%9A%E6%8B%9FDOM.html",{"title":"渲染函数与虚拟DOM","icon":"vue","type":"article","readingTime":{"minutes":3.04,"words":912},"excerpt":"\" Vue 推荐在绝大多数情况下使用模板来创建你的 HTML。然而在一些场景中，你真的需要 JavaScript 的完全编程的能力。这时你可以用渲染函数，它比模板更接近编译器。\" 在深入渲染函数之前，了解一些浏览器的工作原理是很重要的。 DOM树🌲 虚拟DOM树 虚拟DOM的性能到底如何？ 《Vue.js设计与实现》第 4～11 页 \" 总而言之，虚拟DO","author":"王東","date":"2022-07-29T00:00:00.000Z","localizedDate":"2022年7月29日","category":["Vue"],"tag":["组件优化"]},["/code/vue/渲染函数与虚拟DOM.html","/code/vue/%E6%B8%B2%E6%9F%93%E5%87%BD%E6%95%B0%E4%B8%8E%E8%99%9A%E6%8B%9FDOM","/code/vue/渲染函数与虚拟DOM.md","/code/vue/%E6%B8%B2%E6%9F%93%E5%87%BD%E6%95%B0%E4%B8%8E%E8%99%9A%E6%8B%9FDOM.md"]],
  ["v-b8031ba4","/code/vue/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8A%BD%E8%B1%A1%E7%BB%84%E4%BB%B6.html",{"title":"自定义抽象组件","icon":"vue","type":"article","readingTime":{"minutes":1.81,"words":544},"excerpt":"诸如 、、 和 等组件是Vue的内置组件，也可称为抽象组件，组件的实现是一个对象。 \" Vue 的文档没有提这个概念，在抽象组件的生命周期过程中，我们可以对包裹的子组件监听的事件进行拦截，也可以对子组件进行 Dom 操作，从而可以对我们需要的功能进行封装，而不需要关心子组件的具体实现。\" 实现一个 debounce 组件，对子组件的 click 事件进行拦截","author":"王東","date":"2022-07-31T00:00:00.000Z","localizedDate":"2022年7月31日","category":["Vue"],"tag":["吃饱撑的"]},["/code/vue/自定义抽象组件.html","/code/vue/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8A%BD%E8%B1%A1%E7%BB%84%E4%BB%B6","/code/vue/自定义抽象组件.md","/code/vue/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8A%BD%E8%B1%A1%E7%BB%84%E4%BB%B6.md"]],
  ["v-63a98246","/knowledge/spiritual/996%E3%80%81%E5%86%85%E5%8D%B7%E3%80%81%E6%89%93%E5%B7%A5%E4%BA%BA%EF%BC%9A%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E7%9A%84.html",{"title":"996、内卷、打工人：马克思为什么是对的","icon":"page","type":"page","readingTime":{"minutes":50.49,"words":15146},"excerpt":"本文为B站UP主学院派Academia的视频 ——【硬核社会学】996、内卷、打工人：马克思为什么是对的（上）—— 文案。 2020 年的今天，作为一个理性的人，你很难不承认的一个事实是： 排除表面上的政治、文化和社会差异，整个人类社会所运行的最基础、最核心的系统 —— 仍然是资本主义。 无论各国政府依照自身情势运行的是这套系统的哪个变种，毫无疑问的是，他们","author":"Velpro514 @坠茵落溷","date":"2022-07-23T00:00:00.000Z","localizedDate":"2022年7月23日","category":["社会学"]},["/knowledge/spiritual/996、内卷、打工人：马克思为什么是对的.html","/knowledge/spiritual/996%E3%80%81%E5%86%85%E5%8D%B7%E3%80%81%E6%89%93%E5%B7%A5%E4%BA%BA%EF%BC%9A%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E7%9A%84","/knowledge/spiritual/996、内卷、打工人：马克思为什么是对的.md","/knowledge/spiritual/996%E3%80%81%E5%86%85%E5%8D%B7%E3%80%81%E6%89%93%E5%B7%A5%E4%BA%BA%EF%BC%9A%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E7%9A%84.md"]],
  ["v-3e61a924","/knowledge/spiritual/%E4%BB%8E%E5%9F%BA%E9%87%91%E5%88%B0%E6%AF%94%E7%89%B9%E5%B8%81%EF%BC%8C%E9%87%91%E8%9E%8D%E8%B5%84%E6%9C%AC%E5%A6%82%E4%BD%95%E9%9A%90%E5%BD%A2%E5%89%A5%E5%89%8A%E6%89%80%E6%9C%89%E6%89%93%E5%B7%A5%E4%BA%BA%EF%BC%9F.html",{"title":"从基金到比特币，金融资本如何隐形剥削所有打工人？","icon":"page","type":"page","readingTime":{"minutes":39.42,"words":11826},"excerpt":"从基金到比特币，金融资本如何隐形剥削所有打工人？ 本文为 B 站 UP 主 学院派Academia 的视频 ——【金融资本论】从基金到比特币，金融资本如何隐形剥削所有打工人？—— 文案。 金融最大的危害只是让你亏钱吗？不，美国最新的马克思学派研究告诉我们，金融化将重塑劳工结构、规训工人阶级，最终无限放大资本的杠杆和话语权。这场战争，我们无人可以置身事外。 在","author":"Velpro514 @坠茵落溷","date":"2022-07-23T00:00:00.000Z","localizedDate":"2022年7月23日","category":["社会学"]},["/knowledge/spiritual/从基金到比特币，金融资本如何隐形剥削所有打工人？.html","/knowledge/spiritual/%E4%BB%8E%E5%9F%BA%E9%87%91%E5%88%B0%E6%AF%94%E7%89%B9%E5%B8%81%EF%BC%8C%E9%87%91%E8%9E%8D%E8%B5%84%E6%9C%AC%E5%A6%82%E4%BD%95%E9%9A%90%E5%BD%A2%E5%89%A5%E5%89%8A%E6%89%80%E6%9C%89%E6%89%93%E5%B7%A5%E4%BA%BA%EF%BC%9F","/knowledge/spiritual/从基金到比特币，金融资本如何隐形剥削所有打工人？.md","/knowledge/spiritual/%E4%BB%8E%E5%9F%BA%E9%87%91%E5%88%B0%E6%AF%94%E7%89%B9%E5%B8%81%EF%BC%8C%E9%87%91%E8%9E%8D%E8%B5%84%E6%9C%AC%E5%A6%82%E4%BD%95%E9%9A%90%E5%BD%A2%E5%89%A5%E5%89%8A%E6%89%80%E6%9C%89%E6%89%93%E5%B7%A5%E4%BA%BA%EF%BC%9F.md"]],
  ["v-3ea32f42","/knowledge/spiritual/%E6%B6%88%E8%B4%B9%E8%B5%84%E6%9C%AC%E4%B8%BB%E4%B9%89%EF%BC%9A%E6%8E%A7%E5%88%B6%E4%B8%96%E7%95%8C%E7%9A%84%E6%96%B0%E5%AE%97%E6%95%99.html",{"title":"消费资本主义：控制世界的新宗教","icon":"page","type":"page","readingTime":{"minutes":3.81,"words":1142},"excerpt":"这篇也是学院派 Academia 的，原文已经发布在了微信公众号上，有版权声明，故不转载。 文章 【硬核社会学】消费资本主义如何成为控制世界的新宗教 视频 【硬核社会学】消费资本主义：控制世界的新宗教 UP 主的话： 这期视频从 Rena 搜集资料和雁王 Karl 开始研究创造、到斗智斗勇地发布、再到发布之后的风波，可以说都经历了千难万险。但我们很高兴的是，","author":"Velpro514 @坠茵落溷","date":"2022-07-24T00:00:00.000Z","localizedDate":"2022年7月24日","category":["社会学"]},["/knowledge/spiritual/消费资本主义：控制世界的新宗教.html","/knowledge/spiritual/%E6%B6%88%E8%B4%B9%E8%B5%84%E6%9C%AC%E4%B8%BB%E4%B9%89%EF%BC%9A%E6%8E%A7%E5%88%B6%E4%B8%96%E7%95%8C%E7%9A%84%E6%96%B0%E5%AE%97%E6%95%99","/knowledge/spiritual/消费资本主义：控制世界的新宗教.md","/knowledge/spiritual/%E6%B6%88%E8%B4%B9%E8%B5%84%E6%9C%AC%E4%B8%BB%E4%B9%89%EF%BC%9A%E6%8E%A7%E5%88%B6%E4%B8%96%E7%95%8C%E7%9A%84%E6%96%B0%E5%AE%97%E6%95%99.md"]],
  ["v-73bc1031","/knowledge/spiritual/%E8%B5%84%E6%9C%AC%E4%B8%BB%E4%B9%89%E7%9A%84%E6%9C%AC%E8%B4%A8%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F.html",{"title":"资本主义的本质是什么？2 万字超硬核马克思解析","icon":"page","type":"page","readingTime":{"minutes":55.86,"words":16759},"excerpt":"本文为 B 站 UP 主 学院派Academia 的视频 —— 资本主义的本质是什么？2 万字超硬核马克思解析【硬核社会学】—— 文案。 该视频由学院派 UP 主雁王 Karl 研究 / 撰写，Rena 配音 / 制作。 UP 主的话： \" 这期的内容比较符合我对 “通识课程” 的认知，那就是不丧失理论深度的情况下尽量给出框架性的路径。但后果就是要画出巨大的","author":"Velpro514 @坠茵落溷","date":"2022-07-24T00:00:00.000Z","localizedDate":"2022年7月24日","category":["社会学"]},["/knowledge/spiritual/资本主义的本质是什么？.html","/knowledge/spiritual/%E8%B5%84%E6%9C%AC%E4%B8%BB%E4%B9%89%E7%9A%84%E6%9C%AC%E8%B4%A8%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F","/knowledge/spiritual/资本主义的本质是什么？.md","/knowledge/spiritual/%E8%B5%84%E6%9C%AC%E4%B8%BB%E4%B9%89%E7%9A%84%E6%9C%AC%E8%B4%A8%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F.md"]],
  ["v-5e2c641c","/knowledge/spiritual/%E9%87%91%E8%9E%8D%E5%B8%9D%E5%9B%BD%E4%B8%BB%E4%B9%89%E5%A6%82%E4%BD%95%E5%89%A5%E5%89%8A%E5%85%A8%E4%B8%96%E7%95%8C.html",{"title":"金融帝国主义如何剥削全世界？","icon":"page","type":"page","readingTime":{"minutes":44.9,"words":13471},"excerpt":"本文为 B 站 UP 主 学院派Academia 的视频 ——【金融资本论】金融帝国主义如何剥削全世界？—— 文案。 从 P2P、花呗、基金热潮，到比特币、白酒股、显卡潮鞋市场，过去五年，我们见证了整个人类社会在互联网之下的泛金融化革命。然而，我们却没有看到真正的危险所在。早在百年前，马克思学派就已经系统地解剖了资本主义朝金融化迈进的复杂系统进程。而在今天，","author":"Velpro514 @坠茵落溷","date":"2022-07-23T00:00:00.000Z","localizedDate":"2022年7月23日","category":["社会学"]},["/knowledge/spiritual/金融帝国主义如何剥削全世界.html","/knowledge/spiritual/%E9%87%91%E8%9E%8D%E5%B8%9D%E5%9B%BD%E4%B8%BB%E4%B9%89%E5%A6%82%E4%BD%95%E5%89%A5%E5%89%8A%E5%85%A8%E4%B8%96%E7%95%8C","/knowledge/spiritual/金融帝国主义如何剥削全世界.md","/knowledge/spiritual/%E9%87%91%E8%9E%8D%E5%B8%9D%E5%9B%BD%E4%B8%BB%E4%B9%89%E5%A6%82%E4%BD%95%E5%89%A5%E5%89%8A%E5%85%A8%E4%B8%96%E7%95%8C.md"]],
  ["v-0a7c4342","/black/farewell/2020TheirLetter.html",{"title":"2020他们的告别","icon":"page","type":"page","readingTime":{"minutes":22.42,"words":6726},"excerpt":"","author":"Ms.王東","date":"2020-12-31T00:00:00.000Z","localizedDate":"2020年12月31日","category":["黑铁时代"],"tag":["告别"],"isEncrypted":true},["/black/farewell/2020TheirLetter","/black/farewell/2020TheirLetter.md"]],
  ["v-4b6bbc60","/black/farewell/2021TheirLetter.html",{"title":"2021他们的告别","icon":"page","type":"page","readingTime":{"minutes":44.55,"words":13364},"excerpt":"","date":"2021-12-31T00:00:00.000Z","localizedDate":"2021年12月31日","category":["黑铁时代"],"tag":["告别"],"isEncrypted":true},["/black/farewell/2021TheirLetter","/black/farewell/2021TheirLetter.md"]],
  ["v-c7d4cb3e","/black/farewell/2022TheirLetter.html",{"title":"2022他们的告别","icon":"page","type":"page","readingTime":{"minutes":22.7,"words":6811},"excerpt":"","date":"2022-08-12T00:00:00.000Z","localizedDate":"2022年8月12日","category":["黑铁时代"],"tag":["告别"],"isEncrypted":true},["/black/farewell/2022TheirLetter","/black/farewell/2022TheirLetter.md"]],
  ["v-31297eae","/posts/article/useComponentsInMd.html",{"title":"在markdown里使用自定义Vue组件","icon":"edit","type":"article","readingTime":{"minutes":0.47,"words":142},"excerpt":".vuepress/config.js MyComponent.vue md import MyComponent from \"@MyComponent/MyComponent.vue\";","date":"2022-07-26T00:00:00.000Z","localizedDate":"2022年7月26日","category":["vuepress"]},["/posts/article/useComponentsInMd","/posts/article/useComponentsInMd.md"]],
  ["v-5c6e816c","/literary/sigh/%E5%B1%B1%E5%85%A5%E5%AE%89%E8%AE%B0.html",{"title":"山入安记","icon":"page","type":"page","readingTime":{"minutes":17.15,"words":5145},"excerpt":"1. 大年初一这天，杨贵妃要给比她还大十六岁的干儿子洗澡。此时的安禄山赤条条的躺在华清池里，等待贵妃的到来，活像一只待宰的年猪，天光透过玛瑙散入氤氲的水汽，被炫目的年猪回忆起了他偷羊被抓的那个遥远的午夜。 那时的安禄山已满三十岁，一事无成，常做些鸡鸣狗盗之事挣些快钱。那天他趁着夜色潜入羊圈，但行事鲁莽惊扰了羊群，未出圈就被一伙人团团围住，五花大绑的被押送到衙","date":"2021-04-11T00:00:00.000Z","localizedDate":"2021年4月11日","category":["无端太息"],"tag":[],"isOriginal":true},["/literary/sigh/山入安记.html","/literary/sigh/%E5%B1%B1%E5%85%A5%E5%AE%89%E8%AE%B0","/literary/sigh/山入安记.md","/literary/sigh/%E5%B1%B1%E5%85%A5%E5%AE%89%E8%AE%B0.md"]],
  ["v-3706649a","/404.html",{"title":"","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/404"]],
  ["v-5bc93818","/category/",{"title":"分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/index.html"]],
  ["v-744d024e","/tag/",{"title":"标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/index.html"]],
  ["v-e52c881c","/article/",{"title":"文章","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/article/index.html"]],
  ["v-75ed4ea4","/encrypted/",{"title":"加密","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/encrypted/index.html"]],
  ["v-d804e652","/slide/",{"title":"幻灯片","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/slide/index.html"]],
  ["v-154dc4c4","/star/",{"title":"收藏","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/star/index.html"]],
  ["v-01560935","/timeline/",{"title":"时间轴","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/timeline/index.html"]],
  ["v-03d57386","/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{"title":"使用指南 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/使用指南/","/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/index.html"]],
  ["v-18ca63ae","/tag/%E8%BD%BB%E7%9B%88/",{"title":"轻盈 标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/轻盈/","/tag/%E8%BD%BB%E7%9B%88/index.html"]],
  ["v-9a70dece","/category/%E6%9C%AA%E6%9D%A5%E6%96%87%E7%AC%8F/",{"title":"未来文笏 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/未来文笏/","/category/%E6%9C%AA%E6%9D%A5%E6%96%87%E7%AC%8F/index.html"]],
  ["v-b04e9138","/tag/%E8%BF%85%E9%80%9F/",{"title":"迅速 标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/迅速/","/tag/%E8%BF%85%E9%80%9F/index.html"]],
  ["v-e2bac56c","/category/javascript/",{"title":"JavaScript 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/javascript/index.html"]],
  ["v-1daa6b4d","/tag/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/",{"title":"快速上手 标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/快速上手/","/tag/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/index.html"]],
  ["v-36d728aa","/category/flutter/",{"title":"flutter 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/flutter/index.html"]],
  ["v-284efd1e","/tag/demo/",{"title":"demo 标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/demo/index.html"]],
  ["v-05e7d8a8","/category/nodejs/",{"title":"NodeJS 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/nodejs/index.html"]],
  ["v-224dc3ae","/tag/%E6%B3%A8%E8%A7%A3/",{"title":"注解 标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/注解/","/tag/%E6%B3%A8%E8%A7%A3/index.html"]],
  ["v-9717cc36","/category/mysql/",{"title":"mysql 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/mysql/index.html"]],
  ["v-b3094364","/tag/oss/",{"title":"OSS 标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/oss/index.html"]],
  ["v-6c5e4d32","/category/typescript/",{"title":"typescript 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/typescript/index.html"]],
  ["v-b31616ba","/tag/api/",{"title":"api 标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/api/index.html"]],
  ["v-288bedde","/tag/hook/",{"title":"hook 标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/hook/index.html"]],
  ["v-65f6d381","/category/vue/",{"title":"Vue 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/vue/index.html"]],
  ["v-ced3bc52","/tag/%E7%BB%84%E4%BB%B6%E4%BC%98%E5%8C%96/",{"title":"组件优化 标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/组件优化/","/tag/%E7%BB%84%E4%BB%B6%E4%BC%98%E5%8C%96/index.html"]],
  ["v-7c606894","/category/utils/",{"title":"utils 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/utils/index.html"]],
  ["v-c7b31620","/tag/%E5%90%83%E9%A5%B1%E6%92%91%E7%9A%84/",{"title":"吃饱撑的 标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/吃饱撑的/","/tag/%E5%90%83%E9%A5%B1%E6%92%91%E7%9A%84/index.html"]],
  ["v-43d7543a","/category/vuepress/",{"title":"vuepress 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/vuepress/index.html"]],
]
